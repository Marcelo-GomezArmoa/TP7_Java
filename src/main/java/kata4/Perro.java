package kata4;

/**
 * Clase Perro que extiende de Animal
 * Demuestra sobrescritura de m√©todos con @Override
 */
public class Perro extends Animal {
    private String raza;
    private boolean esDomestico;
    
    /**
     * Constructor de la clase Perro
     * @param nombre El nombre del perro
     * @param edad La edad del perro
     * @param raza La raza del perro
     * @param esDomestico Si el perro es dom√©stico o no
     */
    public Perro(String nombre, int edad, String raza, boolean esDomestico) {
        super(nombre, "Canino", edad);  // Llama al constructor de la clase padre
        this.raza = raza;
        this.esDomestico = esDomestico;
    }
    
    /**
     * Sobrescritura del m√©todo hacerSonido()
     * Los perros ladran
     * @return El sonido caracter√≠stico del perro
     */
    @Override
    public String hacerSonido() {
        return "¬°Guau guau! üêï";
    }
    
    /**
     * Sobrescritura del m√©todo describirAnimal()
     * Agrega informaci√≥n espec√≠fica del perro
     */
    @Override
    public void describirAnimal() {
        super.describirAnimal();  // Llama al m√©todo de la clase padre
        System.out.println("Raza: " + raza);
        System.out.println("Dom√©stico: " + (esDomestico ? "S√≠" : "No"));
        if (esDomestico) {
            System.out.println("¬°Es un buen amigo del hombre! ü¶¥");
        }
    }
    
    /**
     * Sobrescritura del m√©todo comer()
     * Los perros tienen una forma espec√≠fica de comer
     */
    @Override
    public void comer() {
        System.out.println(nombre + " est√° comiendo croquetas y moviendo la cola... üêïüçñ");
    }
    
    /**
     * M√©todo espec√≠fico de la clase Perro
     */
    public void jugar() {
        System.out.println(nombre + " est√° jugando a buscar la pelota... üéæ");
    }
    
    /**
     * M√©todo espec√≠fico para entrenar al perro
     */
    public void entrenar() {
        if (esDomestico) {
            System.out.println(nombre + " est√° aprendiendo comandos: ¬°Si√©ntate! ¬°Quieto!");
        } else {
            System.out.println(nombre + " es salvaje y no puede ser entrenado f√°cilmente.");
        }
    }
    
    /**
     * M√©todo para simular que el perro protege
     */
    public void proteger() {
        System.out.println(nombre + " est√° protegiendo su territorio... üõ°Ô∏è");
        System.out.println(hacerSonido()); // Ladra para alertar
    }
    
    // Getters y setters espec√≠ficos
    public String getRaza() {
        return raza;
    }
    
    public void setRaza(String raza) {
        this.raza = raza;
    }
    
    public boolean isEsDomestico() {
        return esDomestico;
    }
    
    public void setEsDomestico(boolean esDomestico) {
        this.esDomestico = esDomestico;
    }
}